repeat wait(Settings.Load) until game:service'Players'.LocalPlayer and game:service'Players'.LocalPlayer.Character and game:IsLoaded()

client = game:service'Players'.LocalPlayer
hrp = client.Character:WaitForChild'HumanoidRootPart'
run = game:service'RunService'
initiate = game:service'TeleportService'
replicated = game:service'ReplicatedStorage'

Instance = {Low = 6938803436, High = 7274690025, Lobby = 7338881230, Afk = 6990131029}

if Settings.Initiate and game.PlaceId == Instance.Low or game.PlaceId == Instance.High then
    initiate:Teleport(Instance.Lobby)
end

if Settings.Initiate and game.PlaceId == Instance.Lobby then
    task.spawn(function()
        while task.wait(1) do
            replicated.RemoteFunctions.MainRemoteFunction:InvokeServer('CompleteDailyQuest', 'DailyQuest_Login')
            replicated.RemoteFunctions.MainRemoteFunction:InvokeServer('CompleteDailyQuest', 'DailyQuest_DungeonClear')
            replicated.RemoteFunctions.MainRemoteFunction:InvokeServer('CompleteDailyQuest', 'DailyQuest_Enemies')
            replicated.RemoteFunctions.MainRemoteFunction:InvokeServer('CompleteDailyQuest', 'DailyQuest_TimeChallenge')
            replicated.RemoteFunctions.MainRemoteFunction:InvokeServer('CompleteDailyQuest', 'DailyQuest_Raid')
            replicated.RemoteFunctions.MainRemoteFunction:InvokeServer('CompleteDailyQuest', 'DailyQuest_BossRush')
            replicated.RemoteFunctions.MainRemoteFunction:InvokeServer('CompleteDailyQuest', 'DailyQuest_AllQuestClear')
            replicated.RemoteFunctions.MainRemoteFunction:InvokeServer('CompleteDailyQuest', 'WeeklyQuest_SpeedRaid')
            replicated.RemoteFunctions.MainRemoteFunction:InvokeServer('CompleteDailyQuest', 'WeeklyQuest_Raid')
            replicated.RemoteFunctions.MainRemoteFunction:InvokeServer('CompleteDailyQuest', 'WeeklyQuest_TimePlayed')
            replicated.RemoteFunctions.MainRemoteFunction:InvokeServer('CompleteDailyQuest', 'WeeklyQuest_Logins')
        end
    end)
    task.spawn(function()
        while task.wait(3) do
            replicated.RemoteFunctions.MainRemoteFunction:InvokeServer('CreateRoom', {['Difficulty'] = 'Easy', ['FriendsOnly'] = true, ['MapName'] = Settings.Raid, ['Hardcore'] = false})
            wait(1)
            replicated.RemoteFunctions.MainRemoteFunction:InvokeServer('TeleportPlayers')
            wait(10)
            replicated.RemoteFunctions.MainRemoteFunction:InvokeServer('TeleportToAFK')
        end
    end)
end

if Settings.Initiate and game.PlaceId == Instance.Afk then
    spawn(function()
        getgenv().name = client.Name..'StatDisplay'
        currency = replicated[name].AfkCurrencyChosen.Value
        if Settings.Token and currency == 'Gem' then
            replicated.RemoteFunctions.MainRemoteFunction:InvokeServer('ChangeAFKCurrency')
            wait(1)
            for m, c in pairs(getconnections(client.PlayerGui.AfkGui.CenterUIFrame.Frame.ChangeCurrency.MouseButton1Click)) do
                c:Fire()
            end
        end
        wait(300)
        replicated.RemoteFunctions.MainRemoteFunction:InvokeServer('TeleportToLobbyAFK', true)
    end)
end


if Settings.Raid and game.PlaceId ~= Instance.Low and game.PlaceId ~= Instance.High and game.PlaceId ~= Instance.Lobby then
    task.spawn(function()
        while task.wait() and Settings.Initiate do
            pcall(function()
                for _, b in pairs(game:service'Workspace'.Folders.Monsters:GetChildren()) do repeat run.Heartbeat:wait()
                    workspace.CurrentCamera.CFrame = CFrame.new(client.Character['HumanoidRootPart'].Position, b.HumanoidRootPart.Position) * CFrame.new(0, 2, 25)
                    local t = (b.HumanoidRootPart.Position - hrp.Position).Magnitude
                    if t < 999 then
                        s = 80
                    elseif t < 1000 then
                        s = 80
                    elseif t >= 1000 then
                        s = 80
                    end
                    local u = game:service'TweenService'
                    local v = TweenInfo.new(t / s, Enum.EasingStyle.Linear)
                    local w = u:Create(client.Character['HumanoidRootPart'], v, {CFrame = b.HumanoidRootPart.CFrame * CFrame.new(0, 0, 10)})
                    w:Play()
                    wait(t / s)
                    until b.Humanoid.Health <= 0 or not b.Parent or not b
                end
            end)
        end
    end)
    Holder = client.PlayerGui.UniversalGui.UniversalCenterUIFrame.SlotsHolder
    task.spawn(function()
        while task.wait(1) and Settings.Raid do
            for m, b in pairs(getconnections(Holder.Skill1.MouseButton1Click)) do
                b:Fire()
            end
            for m, b in pairs(getconnections(Holder.Skill2.MouseButton1Click)) do
                b:Fire()
            end
            for m, b in pairs(getconnections(Holder.Skill3.MouseButton1Click)) do
                b:Fire()
            end
            for m, b in pairs(getconnections(Holder.Skill4.MouseButton1Click)) do
                b:Fire()
            end
            for m, b in pairs(getconnections(Holder.Skill5.MouseButton1Click)) do
                b:Fire()
            end
            for m, b in pairs(getconnections(Holder.SkillAssist1.MouseButton1Click)) do
                b:Fire()
            end
            for m, b in pairs(getconnections(Holder.SkillAssist2.MouseButton1Click)) do
                b:Fire()
            end
        end
    end)
end

client.Idled:Connect(function()
	local vu = game:service'VirtualUser'
	vu:CaptureController()
	vu:ClickButton2(Vector2.new())
end)

task.spawn(function()
    while task.wait(1) do
        game:service'CoreGui'.RobloxPromptGui.promptOverlay.ChildAdded:Connect(function(a3)
            if a3.Name == 'ErrorPrompt' and a3:FindFirstChild'MessageArea' and a3.MessageArea:FindFirstChild'ErrorFrame' then
                initiate:Teleport(Instance.Low)
            end
        end)
    end
end)
